#!/bin/bash

# Path to ZFS executable:
ZFS=/usr/local/sbin/zfs

# Parse arguments:
TARGET=$1
SNAP=$2
COUNT=$3
QUIET=$4

# Function to display usage:
usage() {
    scriptname=`/usr/bin/basename $0`
cat <<EOF
$scriptname: Take and rotate snapshots on a ZFS file system

  Usage:
  $scriptname target snap_name count [-q]
 
  target:    ZFS file system to act on
  snap_name: Base name for snapshots, to be followed by a '.' and
             date "+%F--%H-%M-%S" indicating the age of the snapshot
  count:     Number of snapshots in the snap_name.timestamp format to
             keep at one time. 
  [-q]:      Be quiet.

Example for crontab:
15,30,45  * * * *   root    /usr/local/bin/zfs-snapshot root quarterly 4 -q
0         * * * *   root    /usr/local/bin/zfs-snapshot root hourly 8 -q

Example for anacrontab:
1             10      daily_snap      /usr/local/bin/zfs-snapshot root daily 8
7             30      weekly_snap     /usr/local/bin/zfs-snapshot root weekly 5
@monthly      90      monthly_snap    /usr/local/bin/zfs-snapshot root monthly 3


EOF
    exit
}

# Basic argument checks:
if [ -z $COUNT ] ; then
    echo "COUNT is not provided."
    usage
fi

if [ ! -z $5 ] ; then
    echo "Too many options."
    usage
fi

if [ -n "$QUIET" ] && [ "x$QUIET" != "x-q"  ] ; then
    echo "Option 4 is either -q or empty. Given: \"$QUIET\""
    usage
fi

# Scrubs are stopped by snapshots so avoid snapshotting mid-scrub.
if zpool status ${TARGET} | grep "scrub in progress" 1> /dev/null; then
        echo "Cowardly refusing to perform a  snapshot during a scrub."
        echo "Will resume normal operation after scrub completes."
        exit 0
fi


# $max_snap is the highest number of snapshots that will be kept for $SNAP.
max_snap=$(($COUNT -1))

# Clean up older snapshots:
for i in `zfs list -t snapshot -o name |grep ${TARGET}@${SNAP}|head -n -${max_snap}`; do
    cmd="$ZFS destroy  $i"
    if [ -z $QUIET ]; then
	echo $cmd
    fi
    $cmd
done


# Create new snapshot:
cmd="$ZFS snapshot  ${TARGET}@${SNAP}.`date "+%F--%H-%M-%S"`"
if [ -z $QUIET ]; then
    echo $cmd
fi
$cmd

